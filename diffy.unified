diff --git a/src/server_loop.c b/src/server_loop.c
index 0000000..0000000 100644
--- a/src/server_loop.c
+++ b/src/server_loop.c
@@ -12,6 +12,7 @@
 #include <signal.h>
 #include <unistd.h>
 #include <poll.h>
+#include <time.h>
 #include <pthread.h>
 #include <sys/types.h>
 #include <sys/socket.h>
@@ -1200,6 +1201,48 @@ json_t *buildshipinfo_json (struct ship *curship);
 //void trading (struct player *curplayer, struct port *curport, struct ship *curship, json_t *json_data, char *buffer);
 void trading (struct player *curplayer, struct port *curport, char *buffer,
               struct ship *curship);
 json_t *buildportinfo_json (struct port *curport);
 json_t *totalplanetinf
+
+/* ----------------------------- */
+/* Helpers for session endpoints */
+/* ----------------------------- */
+static json_t *make_session_hello_payload(int is_authed, int player_id, int sector_id) {
+    return json_pack(
+        "{s:s s:i s:o s:o s:o}",
+        "protocol_version", "1.0",
+        "server_time_unix", (int)time(NULL),
+        "authenticated", is_authed ? json_true() : json_false(),
+        "player_id", (is_authed && player_id > 0) ? json_integer(player_id) : json_null(),
+        "current_sector", (is_authed && sector_id > 0) ? json_integer(sector_id) : json_null()
+    );
+}
+
+static int resolve_current_sector_from_info(json_t *info_obj, int fallback) {
+    if (!json_is_object(info_obj)) return fallback;
+    json_t *j = json_object_get(info_obj, "current_sector");
+    if (json_is_integer(j)) return (int)json_integer_value(j);
+    json_t *ship = json_object_get(info_obj, "ship");
+    if (json_is_object(ship)) {
+        j = json_object_get(ship, "sector_id");
+        if (json_is_integer(j)) return (int)json_integer_value(j);
+    }
+    json_t *player = json_object_get(info_obj, "player");
+    if (json_is_object(player)) {
+        j = json_object_get(player, "sector_id");
+        if (json_is_integer(j)) return (int)json_integer_value(j);
+    }
+    return fallback;
+}
@@ -1409,6 +1452,39 @@
   const char *c = json_string_value (cmd);
 
+  /* ----------------------- */
+  /* Session ping / handshake */
+  /* ----------------------- */
+  if (strcmp(c, "session.ping") == 0) {
+    json_t *jdata = json_object_get(root, "data");
+    json_t *echo = json_is_object(jdata) ? json_incref(jdata) : json_object();
+    send_enveloped_ok(ctx->fd, root, "session.pong", echo);
+    json_decref(echo);
+    return;
+  }
+  else if (strcmp(c, "session.hello") == 0) {
+    int sector_id = ctx->sector_id > 0 ? ctx->sector_id : 0;
+    if (ctx->player_id > 0) {
+      json_t *info = NULL;
+      int rc = db_player_info_json(ctx->player_id, &info);
+      if (rc == SQLITE_OK && info) {
+        sector_id = resolve_current_sector_from_info(info, sector_id);
+        json_decref(info);
+      }
+    }
+    json_t *payload = make_session_hello_payload(
+      ctx->player_id > 0, ctx->player_id, sector_id > 0 ? sector_id : 0
+    );
+    send_enveloped_ok(ctx->fd, root, "session.hello", payload);
+    json_decref(payload);
+    return;
+  }
+
   /* ----------------------- */
   /* Authentication */
   /* ----------------------- */
   if (strcmp (c, "login") == 0 || strcmp (c, "auth.login") == 0)
   {
@@ -1477,11 +1553,22 @@
       if (rc == AUTH_OK)
       {
-        json_t *data = json_pack ("{s:i}", "player_id", player_id);
+        int sector_id = ctx->sector_id > 0 ? ctx->sector_id : 0;
+        json_t *pinfo = NULL;
+        int prc = db_player_info_json(player_id, &pinfo);
+        if (prc == SQLITE_OK && pinfo) {
+          sector_id = resolve_current_sector_from_info(pinfo, sector_id);
+          json_decref(pinfo);
+        }
+        if (sector_id <= 0) sector_id = 1;
+        json_t *data = json_pack ("{s:i, s:i}",
+                                  "player_id", player_id,
+                                  "current_sector", sector_id);
         ctx->player_id = player_id;
-        if (ctx->sector_id <= 0)
-          ctx->sector_id = 1;
+        if (ctx->sector_id <= 0) ctx->sector_id = sector_id;
         send_enveloped_ok (ctx->fd, root, "auth.session", data);
         json_decref (data);
       }
@@ -1698,8 +1785,12 @@
     {
       json_t *info = NULL;
       int rc = db_player_info_json (ctx->player_id, &info);
       if (rc == SQLITE_OK && info)
       {
+        int resolved = resolve_current_sector_from_info(info, ctx->sector_id);
+        if (resolved > 0)
+          ctx->sector_id = resolved;
         send_enveloped_ok (ctx->fd, root, "player.info", info);
         json_decref (info);
       }
