{
  "menus": {
    "MAIN": {
      "title": "--- Main Menu (Sector {{sector_id}}) ---",
      "options": [
        {
          "key": "m",
          "label": "(M) Move to a Sector",
          "action": {
            "submenu": "MOVE"
          }
        },
        {
          "key": "d",
          "label": "(D) Re-display Sector",
          "action": {
            "pycall": "redisplay_sector"
          }
        },
        {
          "key": "p",
          "label": "(P) Port & Trade",
          "action": {
            "submenu": "DOCK"
          },
          "show_if": [
            "has_port"
          ]
        },
        {
          "key": "l",
          "label": "(L) Land on a Planet",
          "action": {
            "submenu": "PLANET"
          },
          "show_if": [
            "has_planet"
          ]
        },
        {
          "key": "c",
          "label": "(C) Ship's Computer",
          "action": {
            "submenu": "COMPUTER"
          }
        },
        {
          "key": "v",
          "label": "(V) View Game Status",
          "action": {
            "submenu": "GAME_STATUS"
          }
        },
        {
          "key": "r",
          "label": "(R) Release Beacon",
          "action": {
            "pycall": "set_beacon_flow"
          },
          "show_if": [
            "can_set_beacon"
          ]
        },
        {
          "key": "w",
          "label": "(W) Tow SpaceCraft",
          "action": {
            "pycall": "tow_flow"
          },
          "show_if": [
            "has_tow_target"
          ]
        },
        {
          "key": "e",
          "label": "(E) Enter Ship*",
          "action": {
            "pycall": "enter_ship_menu"
          },
          "show_if": [
            "has_boardable"
          ]
        },
        {
          "key": "u",
          "label": "(U) User Settings",
          "action": {
            "submenu": "SETTINGS"
          }
        },
        {
          "key": "y",
          "label": "(Y) Testing Menu",
          "action": {
            "submenu": "TESTING"
          }
        },
        {
          "key": "h",
          "label": "(H) Help",
          "action": {
            "pycall": "help_main"
          }
        },
        {
          "key": "q",
          "label": "(Q) Quit",
          "action": {
            "pycall": "quit_client"
          }
        },
        {
          "key": "o",
          "label": "C(O)rrespondence (Mail)",
          "action": {
            "submenu": "MAIL"
          }
        },
        {
          "key": "b",
          "label": "(B) Bulk Execute",
          "action": {
            "submenu": "BULK"
          }
        }
      ]
    },
    "MOVE": {
      "title": "--- Move Menu ({{sector_id}}) ---",
      "options": [
        {
          "key": "g",
          "label": "(G) Go to Adjacent Sector",
          "action": {
            "pycall": "move_to_adjacent"
          }
        },
        {
          "key": "w",
          "label": "(W) Warp to Sector",
          "action": {
            "pycall": "warp_flow"
          }
        },
        {
          "key": "p",
          "label": "(P) Pathfind to Sector",
          "action": {
            "pycall": "pathfind_flow"
          }
        },
        {
          "key": "i",
          "label": "(I) Intercept Ship",
          "action": {
            "pycall": "intercept_flow"
          }
        },
        {
          "key": "a",
          "label": "(A) Autopilot",
          "action": {
            "pycall": "autopilot_flow"
          }
        },
        {
          "key": "q",
          "label": "(Q) Back to Main Menu",
          "action": {
            "back": true
          }
        },
        {
          "key": "s",
          "label": "(S) Autopilot Status",
          "action": {
            "pycall": "cli_autopilot_status"
          }
        },
        {
          "key": "k",
          "label": "(K) Autopilot Controls (Y/N/E)",
          "action": {
            "pycall": "cli_autopilot_control"
          }
        }
      ]
    },
    "PLANET": {
      "title": "--- Planet Menu ---\n(You are at a planet)",
      "options": [
        {
          "key": "l",
          "label": "(L) Land",
          "action": {
            "pycall": "land_flow"
          }
        },
        {
          "key": "q",
          "label": "(Q) Back to Main Menu",
          "action": {
            "back": true
          }
        }
      ]
    },
    "COMPUTER": {
      "title": "--- Ship's Computer ---",
      "options": [
        {
          "key": "s",
          "label": "(S) Ship Info",
          "action": {
            "rpc": {
              "command": "ship.info",
              "data": {}
            }
          }
        },
        {
          "key": "a",
          "label": "(A) Autopilot",
          "action": {
            "submenu": "MOVE"
          }
        },
        {
          "key": "g",
          "label": "(G) Get game clock",
          "action": {
            "rpc": {
              "command": "game.get_clock",
              "data": {}
            }
          }
        },
        {
          "key": "p",
          "label": "(P) Planet Info",
          "action": {
            "rpc": {
              "command": "planet.info",
              "data": {
                "planet_id": "<prompt:int:Planet ID>"
              }
            }
          }
        },
        {
          "key": "d",
          "label": "(D) Describe Sector",
          "action": {
            "rpc": {
              "command": "move.describe_sector",
              "data": {
                "sector_id": "<prompt:int:Sector ID>"
              }
            }
          }
        },
        {
          "key": "f",
          "label": "(F) Fast Scan (move.scan)",
          "action": {
            "pycall": "scan_sector"
          }
        },
        {
          "key": "m",
          "label": "(M) Map",
          "action": {
            "pycall": "map_flow"
          }
        },
        {
          "key": "t",
          "label": "(T) Target Info",
          "action": {
            "pycall": "target_info_flow"
          }
        },
        {
          "key": "w",
          "label": "(W) Warp to sector",
          "action": {
            "pycall": "warp_flow"
          }
        },
        {
          "key": "r",
          "label": "(R) Rename Ship",
          "action": {
            "pycall": "rename_ship_flow"
          }
        },
        {
          "key": "q",
          "label": "(Q) Back to Main Menu",
          "action": {
            "back": true
          }
        }
      ]
    },
    "DOCK": {
      "title": "--- Dock Menu ({{port_name}}) ---",
      "options": [
        {
          "key": "t",
          "label": "(T) Trade",
          "action": {
            "pycall": "raw_json_handler"
          }
        },
        {
          "key": "b",
          "label": "(B) Buy (buy)",
          "action": {
            "pycall": "simple_buy_handler"
          }
        },
        {
          "key": "s",
          "label": "(S) Shipyard",
          "action": {
            "submenu": "SHIPYARD"
          },
          "show_if_ctx": [
            "is_stardock"
          ]
        },
        {
          "key": "k",
          "label": "(K) Bank",
          "action": {
            "submenu": "BANK"
          },
          "show_if_ctx": [
            "is_stardock"
          ]
        },
        {
          "key": "q",
          "label": "(Q) Back to Main Menu",
          "action": {
            "back": true
          }
        }
      ],
      "on_enter": {
        "pycall": "ctx_refresh_port_context"
      }
    },
    "SHIPYARD": {
      "title": "--- Shipyard Menu ---",
      "options": [
        {
          "key": "b",
          "label": "(B) Buy Ship",
          "action": {
            "pycall": "buy_ship_flow"
          }
        },
        {
          "key": "u",
          "label": "(U) Upgrade Ship",
          "action": {
            "pycall": "upgrade_ship_flow"
          }
        },
        {
          "key": "d",
          "label": "(D) Downgrade Ship",
          "action": {
            "pycall": "downgrade_ship_flow"
          }
        },
        {
          "key": "s",
          "label": "(S) Sell Ship",
          "action": {
            "pycall": "sell_ship_flow"
          }
        },
        {
          "key": "q",
          "label": "(Q) Back to Main Menu",
          "action": {
            "back": true
          }
        }
      ]
    },
    "BANK": {
      "title": "--- Bank Menu ---",
      "options": [
        {
          "key": "d",
          "label": "(D) Deposit",
          "action": {
            "rpc": {
              "command": "dock.bank.deposit",
              "data": {
                "amount": "<prompt:int:Amount>"
              }
            }
          }
        },
        {
          "key": "t",
          "label": "(T) Transfer funds",
          "action": {
            "rpc": {
              "command": "dock.bank.transfer",
              "data": {
                "to": "<prompt:str:To whom?>",
                "amount": "<prompt:int:Amount>"
              }
            }
          }
        },
        {
          "key": "w",
          "label": "(W) Withdraw",
          "action": {
            "rpc": {
              "command": "dock.bank.withdraw",
              "data": {
                "amount": "<prompt:int:Amount>"
              }
            }
          }
        },
        {
          "key": "q",
          "label": "(Q) Back to Main Menu",
          "action": {
            "back": true
          }
        }
      ]
    },
    "GAME_STATUS": {
      "title": "--- Game Status ---",
      "options": [
        {
          "key": "d",
          "label": "(D) Display status",
          "action": {
            "rpc": {
              "command": "game.status",
              "data": {}
            }
          }
        },
        {
          "key": "q",
          "label": "(Q) Back to Main Menu",
          "action": {
            "back": true
          }
        }
      ]
    },
    "SUBSCRIBE": {
      "title": "--- Subscribe Tools ---",
      "options": [
        {
          "key": "a",
          "label": "(A) Add topic",
          "action": {
            "rpc": {
              "command": "subscribe.add",
              "data": {
                "event_type": "<prompt:str:Topic (e.g. sector.* or system.notice)>"
              }
            },
            "post": "print_last_rpc"
          }
        },
        {
          "key": "r",
          "label": "(R) Remove topic",
          "action": {
            "rpc": {
              "command": "subscribe.remove",
              "data": {
                "event_type": "<prompt:str:Topic to remove>"
              }
            },
            "post": "print_last_rpc"
          }
        },
        {
          "key": "l",
          "label": "(L) List topics",
          "action": {
            "rpc": {
              "command": "subscribe.list",
              "data": {}
            },
            "post": "print_last_rpc"
          }
        },
        {
          "key": "q",
          "label": "(Q) Back",
          "action": {
            "back": true
          }
        },
        {
          "key": "x",
          "label": "(X) Remove Topic",
          "action": {
            "pycall": "cli_subscriptions_remove"
          }
        }
      ]
    },
    "TESTING": {
      "title": "--- Testing Menu ---",
      "options": [
        {
          "key": "c",
          "label": "(C) Capabilities",
          "action": {
            "rpc": {
              "command": "system.capabilities",
              "data": {}
            },
            "post": "print_last_rpc"
          }
        },
        {
          "key": "l",
          "label": "(L) List Schemas",
          "action": {
            "rpc": {
              "command": "system.schema_list",
              "data": {}
            },
            "post": "print_last_rpc"
          }
        },
        {
          "key": "s",
          "label": "(S) Describe Schema",
          "action": {
            "rpc": {
              "command": "system.describe_schema",
              "data": {
                "name": "<prompt:str:command or type>"
              }
            },
            "post": "print_last_rpc"
          }
        },
        {
          "key": "o",
          "label": "(O) Online Players (online)",
          "action": {
            "rpc": {
              "command": "player.list_online",
              "data": {}
            },
            "post": "print_last_rpc"
          }
        },
        {
          "key": "i",
          "label": "(I) Interactive Buy (ibuy)",
          "action": {
            "pycall": "interactive_buy_handler"
          }
        },
        {
          "key": "f",
          "label": "(F) Force Move (force_move)",
          "action": {
            "rpc": {
              "command": "move.warp",
              "data": {
                "to_sector_id": "<prompt:int:Target sector ID>"
              }
            }
          }
        },
        {
          "key": "r",
          "label": "(R) Register Player (register)",
          "action": {
            "rpc": {
              "command": "auth.register",
              "data": {
                "user_name": "<prompt:str:Username>",
                "password": "<prompt:str:Password>"
              }
            }
          }
        },
        {
          "key": "e",
          "label": "(E) Refresh Player (refresh)",
          "action": {
            "rpc": {
              "command": "auth.refresh",
              "data": {}
            }
          }
        },
        {
          "key": "l",
          "label": "(L) Logout",
          "action": {
            "rpc": {
              "command": "auth.logout",
              "data": {}
            }
          }
        },
        {
          "key": "d",
          "label": "(D) Disconnect",
          "action": {
            "rpc": {
              "command": "system.disconnect",
              "data": {}
            }
          }
        },
        {
          "key": "j",
          "label": "(J) Raw JSON command",
          "action": {
            "pycall": "raw_json_handler"
          }
        },
        {
          "key": "q",
          "label": "(Q) Back to Main Menu",
          "action": {
            "back": true
          }
        }
      ]
    },
    "SETTINGS": {
      "title": "--- Settings ---",
      "options": [
        {
          "key": "v",
          "label": "(V) View all settings",
          "action": {
            "pycall": "settings_view"
          }
        },
        {
          "key": "p",
          "label": "(P) Preferences",
          "action": {
            "submenu": "PREFS"
          }
        },
        {
          "key": "b",
          "label": "(B) Bookmarks",
          "action": {
            "submenu": "BOOKMARKS"
          }
        },
        {
          "key": "a",
          "label": "(A) Avoid list",
          "action": {
            "submenu": "AVOID"
          }
        },
        {
          "key": "s",
          "label": "(S) Subscriptions",
          "action": {
            "submenu": "SUBSCRIPTIONS"
          }
        },
        {
          "key": "q",
          "label": "(Q) Back",
          "action": {
            "back": true
          }
        }
      ]
    },
    "PREFS": {
      "title": "--- Preferences ---",
      "options": [
        {
          "key": "t",
          "label": "(T) Toggle 24h clock (ui.clock_24h)",
          "action": {
            "pycall": "prefs_toggle_24h"
          }
        },
        {
          "key": "l",
          "label": "(L) Set locale (ui.locale)",
          "action": {
            "pycall": "prefs_set_locale"
          }
        },
        {
          "key": "q",
          "label": "(Q) Back",
          "action": {
            "back": true
          }
        }
      ]
    },
    "BOOKMARKS": {
      "title": "--- Bookmarks ---",
      "options": [
        {
          "key": "l",
          "label": "(L) List",
          "action": {
            "rpc": {
              "command": "nav.bookmark.list",
              "data": {}
            },
            "post": "print_last_rpc"
          }
        },
        {
          "key": "a",
          "label": "(A) Add",
          "action": {
            "pycall": "bookmark_add_flow"
          }
        },
        {
          "key": "r",
          "label": "(R) Remove",
          "action": {
            "pycall": "bookmark_remove_flow"
          }
        },
        {
          "key": "q",
          "label": "(Q) Back",
          "action": {
            "back": true
          }
        }
      ]
    },
    "AVOID": {
      "title": "--- Avoid List ---",
      "options": [
        {
          "key": "l",
          "label": "(L) List",
          "action": {
            "rpc": {
              "command": "nav.avoid.list",
              "data": {}
            },
            "post": "print_last_rpc"
          }
        },
        {
          "key": "a",
          "label": "(A) Add",
          "action": {
            "pycall": "avoid_add_flow"
          }
        },
        {
          "key": "r",
          "label": "(R) Remove",
          "action": {
            "pycall": "avoid_remove_flow"
          }
        },
        {
          "key": "q",
          "label": "(Q) Back",
          "action": {
            "back": true
          }
        }
      ]
    },
    "SUBSCRIPTIONS": {
      "title": "--- Subscriptions ---",
      "options": [
        {
          "key": "l",
          "label": "(L) List",
          "action": {
            "rpc": {
              "command": "subscribe.list",
              "data": {}
            },
            "post": "print_last_rpc"
          }
        },
        {
          "key": "a",
          "label": "(A) Add",
          "action": {
            "rpc": {
              "command": "subscribe.add",
              "data": {
                "event_type": "<prompt:str:Topic (e.g., system.notice or sector.*)>"
              }
            },
            "post": "print_last_rpc"
          }
        },
        {
          "key": "r",
          "label": "(R) Remove",
          "action": {
            "rpc": {
              "command": "subscribe.remove",
              "data": {
                "event_type": "<prompt:str:Topic>"
              }
            },
            "post": "print_last_rpc"
          }
        },
        {
          "key": "q",
          "label": "(Q) Back",
          "action": {
            "back": true
          }
        }
      ]
    },
    "CHAT": {
      "title": "--- Chat ---",
      "options": [
        {
          "key": "h",
          "label": "(H) History",
          "action": {
            "pycall": "cli_chat_history"
          }
        },
        {
          "key": "s",
          "label": "(S) Send",
          "action": {
            "pycall": "cli_chat_send"
          }
        },
        {
          "key": "q",
          "label": "(Q) Back",
          "action": {
            "back": true
          }
        }
      ]
    },
    "MAIL": {
      "title": "--- Mail ---",
      "options": [
        {
          "key": "i",
          "label": "(I) Inbox",
          "action": {
            "pycall": "cli_mail_inbox"
          }
        },
        {
          "key": "r",
          "label": "(R) Read",
          "action": {
            "pycall": "cli_mail_read"
          }
        },
        {
          "key": "s",
          "label": "(S) Send",
          "action": {
            "pycall": "cli_mail_send"
          }
        },
        {
          "key": "d",
          "label": "(D) Delete",
          "action": {
            "pycall": "cli_mail_delete"
          }
        },
        {
          "key": "q",
          "label": "(Q) Back",
          "action": {
            "back": true
          }
        }
      ]
    },
    "BULK": {
      "title": "--- Bulk Execute ---",
      "options": [
        {
          "key": "x",
          "label": "(X) Execute batch",
          "action": {
            "pycall": "cli_bulk_execute_flow"
          }
        },
        {
          "key": "q",
          "label": "(Q) Back",
          "action": {
            "back": true
          }
        }
      ]
    }
  }
}